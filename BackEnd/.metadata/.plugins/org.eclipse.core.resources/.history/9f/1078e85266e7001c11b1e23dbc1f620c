package com.sawysthaSeva.ipdServer.Service;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.sawysthaSeva.ipdServer.Entity.Ipd;
import com.sawysthaSeva.ipdServer.Model.CustomIpd;
import com.sawysthaSeva.ipdServer.Model.Doctor;
import com.sawysthaSeva.ipdServer.Repository.IpdRepository;

@Component
public class IpdService {

	@Autowired
	private IpdRepository ipdRepo;
	
	@Autowired
	private RestTemplate restTemplate;
	
	ObjectMapper mapper = new ObjectMapper();
	
	public Ipd addIpd(Ipd ipd) {
		return ipdRepo.save(ipd);
	}
	
	public List<CustomIpd> getIpdOfPatient(String name){
		List<CustomIpd> list = new ArrayList<>();
		
		List<Ipd> ipds = ipdRepo.findByName(name);
		
		for(Ipd ipd : ipds) {
			CustomIpd ci = new CustomIpd();
			ci.setIpd(ipd);
			
			JsonNode dNode = restTemplate.getForObject("http://DOCTOR-SERVER/doctors/get/id/"+ipd.getDoctorId(), JsonNode.class);
			
			Doctor d = mapper.convertValue(dNode, new TypeReference<Doctor>() {
			});
			
			ci.setDoctor(d);
			list.add(ci);
		}
		return list;
	}
	
	public List<Ipd> allIpds(){
		return ipdRepo.findAll();
	}
	
	public Ipd update(Ipd ipd) {
		return ipdRepo.saveAndFlush(ipd);
	}
	
	public List<CustomIpd> getAllIpds(){
		List<CustomIpd> list = new ArrayList<>();
		
		List<Ipd> ipds = ipdRepo.findAll();
		
		for(Ipd ipd : ipds) {
			
			if(!ipd.isServed()) {
				CustomIpd ci = new CustomIpd();
				ci.setIpd(ipd);
				
				JsonNode dNode = restTemplate.getForObject("http://DOCTOR-SERVER/doctors/get/id/"+ipd.getDoctorId(), JsonNode.class);
				
				Doctor d = mapper.convertValue(dNode, new TypeReference<Doctor>() {
				});
				
				ci.setDoctor(d);
				list.add(ci);
			}
		}
		return list;
	}
	
	public List<Ipd> getIpdsOfDoctor(int id){
		List<Ipd> allIpds = ipdRepo.findAll();
		
		List<Ipd> ipds = new ArrayList<>();
		
		for(Ipd ipd : allIpds) {
			if(ipd.getDoctorId() == id && !ipd.isServed())
				ipds.add(ipd);
		}
		return ipds;
	}
}
